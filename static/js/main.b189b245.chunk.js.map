{"version":3,"sources":["assets/campus.jpg","components/FontAwesomeIcon.js","OurServices.js","components/Jumbotron.js","About.js","OurTeam.js","NoMatch.js","components/Layout.js","components/NavBar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","library","add","fab","OurServices","Styles","styled","div","campus","Jumbotron","props","style","background","fluid","className","Container","About","OurTeam","NoMatch","Layout","children","NavigationBar","Navbar","collapseOnSelect","expand","Brand","href","src","height","variant","Toggle","aria-controls","Collapse","id","Nav","Item","Link","NavDropdown","title","Footer","Button","icon","App","Fragment","basename","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b189b245.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/campus.eef6590e.jpg\";","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(fab)","import React from 'react';\n\nexport const OurServices = () => (\n    <div>\n        <h1>Our Services</h1>\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequuntur, corporis.</p>\n        <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Voluptate totam perspiciatis mollitia et sapiente obcaecati.</p>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \n            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n            proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n    </div>\n)","import React from 'react';\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport campus from '../assets/campus.jpg';\n\nconst Styles = styled.div`\n    .jumbo {\n        padding: 6rem;\n        margin: 0rem 0rem 2.5rem 0rem;\n        background: url(${campus}) fixed bottom;\n        background-size: cover;\n        color: #efefef;\n        text-shadow: 1px 1px 5px black;\n        text-align: center;\n        z-index: -2;\n    }\n\n    .overlay {\n        background-color: #000;\n        opacity: 0.6;\n        position: absolute;\n        z-index: -1;\n    }\n`;\n\nexport const Jumbotron = (props) => (\n    <Styles>\n        <div style={{background: props}} />\n        <Jumbo fluid className=\"jumbo\">\n            <div className=\"overlay\"></div>\n            <Container> \n                <h1>SANTA CRUZ FREE CLINIC</h1>\n            </Container>\n        </Jumbo>\n    </Styles>\n\n)","import React from 'react';\nimport { Jumbotron } from './components/Jumbotron';\n\n\nexport const About = () => (\n    <div>\n        <h5>Santa Cruz Free Clinic is dedicated to fighting healthcare disparities \n            in the Santa Cruz community by providing access to first step healthcare. \n            We strive to provide compassionate and accessible healthcare and resources \n            to those who may be experiencing houselessness or other difficult conditions \n            at this time.</h5>\n        <h6>It is the goal of the SCFC to provide access to basic healthcare and hygiene resources to the community.</h6>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore \n            magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n            consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>\n    </div>\n)\n","import React from 'react';\n\nexport const OurTeam = () => (\n    <div>\n        <h3>PR Team</h3>\n        <h5>The PR team is working towards building a relationship with the community and bringing people into the clinic. We are also working to bring resources to those who are experiencing houselessness. </h5>\n        <h6>The PR team is working to foster a relationship with the community in Santa Cruz by providing opportunities to contribute to the clinic, as well as distributing resources to those experiencing houselessness.</h6>\n\n        <h3>Legal Team</h3>\n        <h5>The Legal Team is working to make sure that our clinic retains its state and nationally recognized nonprofit status. This team is also working hard to create a plan that ensures the longevity of the clinic. </h5>\n        <h6>The Legal Team is working to ensure the longevity of Santa Cruz Free Clinic by retaining its status as a 501c3 nonprofit organization. </h6>\n\n        <h3>Finance Team</h3>\n        <h5>The Finance Team is working to ensure that our team is able to successfully receive donations from our community and that our organization can continue to provide resources for fighting healthcare disparities. </h5>\n        <h6>The Finance Team is working to ensure that the clinic makes fiscal decisions to best support our community.</h6>\n    </div>\n)","import React from 'react';\n\nexport const NoMatch = () => (\n    <div>\n        <h1>No Match Found</h1>\n    </div>\n)","import React from 'react';\nimport { Container } from 'react-bootstrap';\n// import Container from 'react-bootstrap/Container'; <-- imports entire library\n\nexport const Layout = (props) => (\n    <Container>\n        {props.children}\n    </Container>\n)","import React from 'react';\nimport { Nav, Navbar, NavDropdown, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: #5C1008;\n        padding-top: 0;\n    }\n\n    .navbar .scfc-logo {\n        padding-top: 1rem;\n        padding-bottom: 0;\n        color: white;\n    }\n\n    .navbar-nav .nav-link {\n        color: rgba(255,255,255,.6);\n        &:hover {\n            color: white;\n        }\n    }\n\n    // When a dropdown is clicked, remain white\n    .navbar-light .navbar-nav .show>.nav-link {\n        color: white;\n    }\n\n    .dropdown-menu {\n        background-color: #5C1008;\n    }\n\n    .dropdown-item {\n        color: rgba(255,255,255,.6);\n        &:hover {\n            color: white;\n            background: transparent;\n        }\n    }\n\n    // .dropdown-toggle::after {\n    // }\n`;\n\nexport const NavigationBar = () => (\n    <Styles>\n        <Navbar collapseOnSelect expand=\"lg\" >\n            <Container>\n                <Navbar.Brand href=\"/\" className=\"scfc-logo\"><img src=\"https://gallery.mailchimp.com/dc310f781af3dfc101fd4c57c/images/1e63e991-c626-430b-aa5c-0113be67a089.jpg\" height=\"35\"/> SC Free Clinic</Navbar.Brand>\n            </Container>\n        </Navbar>\n        <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\n            <Container>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\"> \n                        <Nav.Item><Nav.Link href=\"/ourservices\">Our Services</Nav.Link></Nav.Item>\n                        <NavDropdown title=\"About the Clinic\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"/about\">Mission + Goal</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/scfreeclinic/#/ourteam\">Our Team</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"Become Involved\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#\">GoFundMe</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#\">Other</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    </Styles>\n)\n","import React, { Component } from 'react';\nimport { Nav, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Button from 'react-bootstrap/Button'\n\nconst Styles = styled.div`\n    .nav {\n        background-color: #E0DEDC;\n        padding: 4rem;\n        margin: 7rem 0 0 0;\n    }\n\n    .nav p {\n        margin: .2rem;\n    }\n\n    #footer-content {\n        text-align: center;\n    }\n\n    a {\n        color: #212529;\n    }\n`;\n\nexport const Footer = () => (\n        <Styles>\n            <Nav className=\"justify-content-center\" expand=\"lg\" variant=\"dark\">\n                <Container id=\"footer-content\">\n                    <p>Location: -- | Phone Number: -- | Email: <a href=\"mailto:scfreeclinic@gmail.com\"> scfreeclinic@gmail.com </a></p>\n                    <Button variant=\"link\" href=\"https://www.facebook.com/groups/215765172962897/\"><FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} /></Button>\n                    <Button variant=\"link\" href=\"https://www.instagram.com/scfreeclinic/\"><FontAwesomeIcon icon={[\"fab\", \"instagram\"]} /></Button>\n                    <Button variant=\"link\" href=\"https://twitter.com/scfreeclinic\"><FontAwesomeIcon icon={[\"fab\", \"twitter\"]} /></Button>\n                </Container>\n            </Nav>\n        </Styles>\n)\n","import React, { Component } from 'react';\nimport \"./components/FontAwesomeIcon\";\nimport { HashRouter as Router, Switch, Route , Link } from \"react-router-dom\";\nimport { OurServices } from './OurServices';\nimport { About } from './About';\nimport { OurTeam } from './OurTeam';\nimport { NoMatch } from './NoMatch';\nimport { Layout } from './components/Layout';\nimport { Jumbotron } from './components/Jumbotron';\nimport { NavigationBar } from './components/NavBar';\nimport { Footer } from './components/Footer';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <React.Fragment>\n        <Router basename='/'>\n        <NavigationBar />\n        <Jumbotron />\n        <Layout>\n            <Switch>              \n              <Route exact path=\"/\" component={About} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/ourteam\" component={OurTeam} />\n              <Route path=\"/ourservices\" component={OurServices} />\n              <Route component={NoMatch} />\n            </Switch>\n        </Layout>\n        <Footer />\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}